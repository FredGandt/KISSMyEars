:root {
	--darkerer-grey: #383838;
	--darkest-grey: #2f2f2f;
	--lighter-grey: #909090;
	--darker-grey: #404040;
	--light-grey: #808080;
	--rude-grey: #696969;

	--darkest-turq: #0d3435;
	--bright-turq: #00ffdd;
	--dark-turq: #246a6a;
	--mid-turq: #2c7b7b;
	--turq: #339999;

	--dark-turq-border: 1px solid var( --dark-turq );

	--orange: #a86d14;
	--pink: #a9587f;
	--red: #c72d2d;
}

::-webkit-scrollbar {
	height: 1rem;
	width: 1rem;
}

::-webkit-scrollbar-track,
::-webkit-scrollbar-thumb {
	background-color: var( --darkest-grey );
	border-radius: 1rem;
}

::-webkit-scrollbar-thumb {
	box-shadow: 0 0 10rem 10rem var( --turq ) inset;
}

::-webkit-slider-thumb {
	box-shadow: -100vw 0 0 calc( 100vw - .5rem ) var( --dark-turq );
	background-color: var( --turq );
	border-radius: 50%;
	cursor: ew-resize;
	appearance: none;
	display: block;
	height: 1rem;
	width: 1rem;
}

::-webkit-file-upload-button {
	visibility: hidden;
}

*:not(input[type="text"]) {
	user-select: none;
}

.flight {
	float: right;
}

.fleft {
	float: left;
}

.left_marg {
	margin-left: .5rem !important;
}

body, div, form {
	background-color: var( --darker-grey );
}

body {
	font-family: monospace, monospace;
	color: var( --lighter-grey );
	overflow: hidden;
	font-size: 16px;
	margin: 0;
}

div.section {
	display: inline-block;
	vertical-align: top;
	overflow: auto;
	padding: 1rem;
}

div.secleft {
	height: calc( 100vh - 6.3rem );
	width: calc( 75vw - 2rem );
	scroll-behavior: smooth;
	margin: 1rem 0 0;
}

div.secright {
	width: calc( 25vw - 2rem );
	height: 100vh;
}

#seek {
	width: calc( 75vw - 2rem );
	padding: 0 1rem 1rem;
	position: absolute;
	margin: 0;
	bottom: 0;
	left: 0;
}

#seek input {
	width: 100%;
}

fieldset[name="transport"],
fieldset[name="folder"],
output[name="times"] {
	width: calc( 25vw - 2rem );
	text-align: center;
}

output[name="times"] {
	display: inline-block;
}

form.overlay {
	position: absolute;
	padding: 1rem;
	z-index: -1;
}

form.overlay.show {
	z-index: 1;
}

form.overlay.show.drop {
	box-shadow: 0 0 2rem 0rem black;
	border-radius: .5rem;
}

div.dropzone {
	border: var( --dark-turq-border );
	display: inline-block;
	border-radius: .2rem;
	padding: .5rem;
	margin: 0 1rem;
}

h1 {
	margin: 0;
}

#sources select,
#sources input {
	width: -webkit-fill-available;
	display: block;
}

#sources input:not([type="file"]) {
	margin: 0 0 .5rem 0;
}

#sources fieldset {
	margin-top: 0;
}

#list_editor {
	height: calc( 100vh - 4.3rem );
	width: calc( 75vw - 2rem );
	padding-bottom: 0;
}

#list_editor > fieldset:not(.pf) {
	background-color: inherit;
	padding: 0 0 1rem;
	margin-top: 0;
	left: 0;
	top: 0;
}

#list_editor > ol.dropzone {
	height: calc( 100vh - 8rem );
	overflow: auto;
}

#list_editor li.dragee {
	opacity: .25;
}

#playlist_filter {
	right: 2rem;
	top: 2rem;
}

#playlist_filter input[type="text"] {
	color: var( --turq );
}

#playlist_filter input[name="starts"] {
	width: 11ch;
}

#playlist_filter input[name="ends"] {
	width: 9ch;
}

fieldset {
	margin: 0;
	border: 0;
}

fieldset:not(.pf),
button {
	margin-top: .5rem;
}

legend:not(.pf) {
	color: var( --turq );
}

fieldset:not(.pf).legend.wrap label {
	display: inline-block;
}

fieldset:not(.pf).legend {
	border: 1px solid var( --dark-turq );
	border-radius: .2rem;
}

fieldset:not(.pf).legend label {
	display: block;
}

fieldset:not(.pf):not(.legend) {
	padding: 0;
}

fieldset:not(.pf).child {
	border-radius: 0 0 .2rem .2rem;
	margin: .25rem 0 .5rem 0;
	border-top: 0;
}

output[name="played_length"]::after {
	content: attr( data-pl ) "\0000a0PLAYED";
}

output[name="queue_length"]::after {
	content: attr( data-ql ) "\0000a0QUEUED";
}

output[name="sequence_length"]::after {
	content: attr( data-sl ) "\0000a0TO";
}

output[name="times"]::before {
	content: attr( data-dura ) "\0000a0\002212\0000a0" attr( data-curt ) "\0000a0\00224A\0000a0" attr( data-rema );
}

output[name="playlist_length"]::before {
	content: attr( data-tracks ) "\0000a0IN\0000a0" attr( data-folders );
}

output[name="playlist_length"]::after {
	content: attr( data-broken );
	color: var( --red );
}

output[name="playlist_length"] {
	margin-bottom: .3rem;
	display: block;
}

input[name="fixBreakages"].show {
	display: inline-block;
}

ol li span::after {
	content: attr( data-display );
}

ol li {
	padding: .2rem 1rem 0;
	color: var( --turq );
	white-space: nowrap;
}

#playlist ol li.played {
	color: var( --dark-turq ) !important;
}

#playlist li.played {
	color: var( --rude-grey ) !important;
}

li.broken {
	color: var( --red ) !important;
}

ol li span {
	text-overflow: ellipsis;
	display: inline-block;
}

ol li span,
ol li {
	overflow: hidden;
}

ol li span:nth-child(1) {
	width: 5ch;
}

ol li span:nth-child(2) {
	width: calc( 100% - 10ch );
}

ol li span:nth-child(3) {
	width: 4ch;
}

ul, ol {
	list-style: none;
	padding: 0;
	margin: 0;
}

select,
input {
	background-color: var( --darkest-grey );
	font-family: monospace, monospace;
	border-radius: .2rem;
	font-size: inherit;
	color: inherit;
	padding: 0;
	border: 0;
}

input[type="checkbox"],
input[type="radio"] {
	appearance: none;
	margin: 0 .4rem;
	padding: .4rem;
}

input[type="radio"] {
	border-radius: 50%;
}

input[type="file"] {
	background-color: var( --darker-grey );
	color: transparent;
	display: block;
}

input[type="file"]::before {
	background-color: var( --darkest-grey );
	padding: .2rem .4rem .1rem;
	color: var( --lighter-grey );
	content: "SELECT FOLDERS";
	border-radius: .2rem;
	cursor: pointer;
}

input[type="range"] {
	background-color: var( --darkest-grey );
	vertical-align: text-top;
	border-radius: 1rem;
	position: relative;
	cursor: ew-resize;
	appearance: none;
	overflow: hidden;
	margin: 0;
}

label.range + label.range {
	margin-top: .5rem;
	display: block;
}

label.range::after {
	color: var( --lighter-grey );
	vertical-align: text-top;
	content: attr( data-op );
	margin-left: .5rem;
	font-size: 90%;
}

fieldset[name="transport"] {
	position: absolute;
	bottom: 1rem;
}

fieldset[name="transport"] input {
	background-color: transparent;
	background-repeat: no-repeat;
	background-position: center;
	background-size: contain;
	border-radius: 0.4rem;
	height: 3rem;
	width: 3rem;
}

fieldset[name="transport"] input:hover {
	background-color: var( --dark-turq );
}

input[name="prevFolder"],
input[name="prevTrack"] {
	background-image: url( "prev.png" );
}

input[name="backFolder"],
input[name="backTrack"] {
	background-image: url( "back.png" );
}

input[name="nextFolder"],
input[name="nextTrack"] {
	background-image: url( "next.png" );
}

input[name="pawsTrack"] {
	background-image: url( "paws.png" );
}

input[name="playTrack"] {
	background-image: url( "play.png" );
}

input[name="stopTrack"] {
	background-image: url( "stop.png" );
}

input:checked {
	background-color: var( --turq );
}

input.orange:checked {
	background-color: var( --orange );
}

input.pink:checked {
	background-color: var( --pink );
}

input.orange.split:checked {
	background-image: linear-gradient( to right, var( --turq ) 50%, var( --orange ) 50% );
}

output:not([name="playlist_length"]) + input,
input + input:not([type="file"]) {
	margin-left: .5rem;
}

input[type="button"],
input[type="text"],
select {
	padding: .2rem .4rem .2rem;
}

input[type="text"] {
	padding-bottom: .3rem;
	vertical-align: top;
}

select {
	padding-bottom: .2rem;
	margin-bottom: .5rem;
}

input[type="button"],
select {
	cursor: pointer;
}

#playlist > li::before {
	content: attr( data-path );
	font-weight: bold;
}

#playlist:not(.collapsed) > li:not(:first-of-type) {
	border-top: var( --dark-turq-border );
	padding-top: .5rem;
}

#playlist ol {
	background-color: var( --darker-grey );
	margin-top: .5rem;
}

#playlist.collapsed:not(.filtered) > li:nth-child( odd ),
#playlist:not(.filtered) ol li:nth-child( odd ) {
	background-color: var( --darkerer-grey );
}

#playlist.collapsed > li.playing {
	padding-top: .5rem;
}

#playlist.filtered li.filtered li.filtered {
	background-color: var( --darkest-turq );
	color: var( --lighter-grey );
}

#playlist ol li.playing:not(.broken) {
	background-color: var( --dark-turq ) !important;
}

#playlist ol li.playing:not(.broken):not(.focussed) {
	color: var( --darkest-grey ) !important;
}

#playlist li.focussed {
	color: var( --bright-turq ) !important;
}

#playlist.collapsed > li.focussed {
	padding-top: .5rem;
}

fieldset.orange input[type="button"],
fieldset[name="sequencing"] input,
input[type="button"].orange,
#spp input {
	background-color: var( --orange );
	color: var( --darkest-grey );
	padding-bottom: .1rem;
}

#spp input {
	background-color: var( --turq );
}

fieldset[name="sequencing"] input {
	background-color: var( --pink );
}

#playlist ol li span[data-sequence]:not([data-sequence=""])::before,
#playlist ol li span[data-queue]:not([data-queue=""])::before {
	color: var( --darkest-grey );
	border-radius: .2rem;
	margin-right: .5rem;
	padding: 0 .5rem;
}

#playlist ol li span[data-queue]:not([data-queue=""])::before {
	background-color: var( --orange );
	content: attr( data-queue );
}

#playlist ol li span[data-sequence]:not([data-sequence=""])::before {
	background-color: var( --pink );
	content: attr( data-sequence );
}

#playlist ol li span[data-queue]:not([data-queue=""])[data-sequence]:not([data-sequence=""])::before {
	background-image: linear-gradient( to right, var( --pink ), var( --orange ) );
	content: attr( data-sequence ) "\0000a0|\0000a0" attr( data-queue );
}

#playlist.collapsed:not(.filtered) > li:not(.playing):not(.focussed):not(.focussed_folder) ol,
#controls.hide_shuffle_by fieldset.shuffle_by,
#controls.hide_cont_folder span.skip_folders,
#controls.hide_cont_folder label.cont_folder,
#controls.hide_shuffle_by span.skip_folders,
#list_editor ol li span:not(:nth-child(2)),
#sources fieldset[name="new_lib"]:disabled,
#sources input[name="include"]:disabled,
fieldset[name="sequencing"]:not(.show),
#playlist.filtered li:not(.filtered),
#list_editor div.dropzone li,
#controls span.skip_tracks,
input[name="fixBreakages"],
fieldset[name="folder"],
#spp:not(.show) {
	display: none;
}

#controls.hide_cont_folder span.skip_tracks,
#controls.hide_shuffle_by span.skip_tracks {
	display: inline;
}

fieldset[name="folder"] {
	background-color: var( --darker-grey );
	border-top: var( --dark-turq-border );
	padding-top: .5rem !important;
}

#controls:not(.hide_cont_folder):not(.hide_shuffle_by) fieldset[name="folder"] {
	display: block;
}

fieldset[name="folder"] span {
	width: calc( ( 3.5rem * 3 ) + .5rem );
	color: var( --dark-turq );
	display: inline-block;
	vertical-align: top;
	font-size: 200%;
}

button {
	background-color: var( --darker-grey );
	border: var( --dark-turq-border );
	color: var( --light-grey );
	border-radius: .3rem;
	font-family: inherit;
	font-size: .8rem;
	padding: .5rem;
}

kbd {
	color: var( --mid-turq );
}

label kbd {
	vertical-align: text-top;
	font-size: 90%;
}

label kbd::before {
	content: "(";
}

label kbd::after {
	content: ")";
}
